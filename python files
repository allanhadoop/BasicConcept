# http://www.w3resource.com/python-exercises/file/index.php
# All about files -- SO basically we open , read files into either variable or list or array and then apply functions on that... 
----------------------------------
# to read an entire text file.
r = open('/Users/allangonsalves/Desktop/sample.rtf',mode='r')
print(r.read())
----------------------------------
# to read first n lines of a file
from itertools import islice
def readlines(fname, nlines):
    with open(fname) as f:
        for line in islice(f,nlines):
            print(line)
print(readlines('/Users/allangonsalves/Desktop/sample.rtf',12))
----------------------------------
# to read a file line by line store it into an array. 
def readfiles(fname):
    myarray = []
    with open(fname, 'rb') as f:
        for line in f:
            myarray.append(line)
        return myarray

print(readfiles('/Users/allangonsalves/Desktop/sample.rtf'))
----------------------------------
# to read a file line by line store it into a variable
def readfiles(fname):
    with open(fname, 'r') as f:
        data = f.readlines()
        print(data)
readfiles('/Users/allangonsalves/Desktop/sample.rtf')
----------------------------------
# to read a file line by line and store it into a list.
def readfiles(fname):
    with open(fname) as f:
        mylist = f.readlines()
    return mylist
print(readfiles('/Users/allangonsalves/Desktop/sample.rtf'))
# to append text to a file and display the text.
from itertools import islice
def writethenread(fname):
    with open(fname,"w") as f:
        f.write("this is new line added")
    file = open(fname)
    return file.read() 
print(writethenread('/Users/allangonsalves/Desktop/sample.rtf'))
----------------------------------
# to find the longest words.
def longestword(fname):
    with open(fname,"r") as f:
        words = f.read().split()    ## here we are reading files into a variable
    maxlen = len(max(words, key=len))  #these are now variable functions
    return [ word for word in words if len(word) == maxlen]

print(longestword('/Users/allangonsalves/Desktop/sample.rtf'))
----------------------------------
# to count the number of lines in a text file.
def numoflines(fname):
    with open(fname,"r") as f:
        for i, l in enumerate(f):    # here i is index of lines...
            pass
    return i + 1
print(numoflines('/Users/allangonsalves/Desktop/sample.html'))
----------------------------------
#  to count the frequency of words in a file.
from collections import Counter   #This module does the count 
def numofwords(fname):
    with open(fname,"r") as f:
        return Counter(f.read().split()) 
print(numofwords('/Users/allangonsalves/Desktop/sample.html'))
----------------------------------
# to get the file size of a plain file
import os
def filesize(fname):
    return os.stat(fname).st_size
print(filesize('/Users/allangonsalves/Desktop/sample.html'))
----------------------------------
# to write a list to a file.
mylist = ['red','purple','white','blue']
def writelisttofile(fname):
    with open(fname,"w") as f:
        for c in mylist:
            f.write("%s\n" % c)

    newcontent = open(fname)
    return newcontent.read()
print(writelisttofile('/Users/allangonsalves/Desktop/sample.html'))
----------------------------------
# to read last n lines of a file. 
def file_read_from_tail(fname,lines):
       data = []
       with open(fname,"r") as f:
           data.extend(f.readlines())
           if len(data) >= lines:
            return ''.join(data[-lines:])
print(file_read_from_tail('/Users/allangonsalves/Desktop/sample.html',2))
---second better approach is below---
import sys
import os
def file_read_from_tail(fname,lines):
        bufsize = 8192
        fsize = os.stat(fname).st_size
        iter = 0
        with open(fname) as f:
                if bufsize > fsize:
                        bufsize = fsize-1
                        data = []
                        while True:
                                iter +=1
                                f.seek(fsize-bufsize*iter)
                                data.extend(f.readlines())
                                if len(data) >= lines or f.tell() == 0:
                                        print(''.join(data[-lines:]))
                                        break
file_read_from_tail('test.txt',2)




